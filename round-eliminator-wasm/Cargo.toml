[workspace]
[package]
name = "round-eliminator-wasm"
version = "0.1.0"
authors = ["Dennis"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2"
round-eliminator-lib = {path = "../round-eliminator-lib", default-features = false, features = ["onlyrust"]}
js-sys = "0.3"
console_log = { version = "0.2" }
log = "0.4"
#wasm-bindgen-rayon = { version = "1.0", features = ["no-bundler"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
#wee_alloc = { version = "0.4.5", optional = true }


[dependencies.web-sys]
version = "0.3.4"
features = [
    'console',
    'Document',
    'HtmlElement',
    'HtmlInputElement',
    'MessageEvent',
    'Window',
    'Worker',
]

[profile.release]
opt-level = "s"
debug = true



[package.metadata.wasm-pack.profile.release]
wasm-opt = false